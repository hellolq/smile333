<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smile.mapper.ComplaintDOMapper">
  <resultMap id="BaseResultMap" type="com.smile.pojo.ComplaintDO">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="Type" jdbcType="INTEGER" property="type" />
    <result column="Score" jdbcType="INTEGER" property="score" />
    <result column="IsEnabled" jdbcType="TINYINT" property="isenabled" />
    <result column="IsDeleted" jdbcType="TINYINT" property="isdeleted" />
    <result column="CreateTime" jdbcType="BIGINT" property="createtime" />
    <result column="UpdateTime" jdbcType="BIGINT" property="updatetime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.smile.pojo.ComplaintDO">
    <result column="Content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, UserId, Type, Score, IsEnabled, IsDeleted, CreateTime, UpdateTime
  </sql>
  <sql id="Blob_Column_List">
    Content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.smile.pojo.ComplaintDOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from complaint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.smile.pojo.ComplaintDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complaint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from complaint
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from complaint
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.smile.pojo.ComplaintDOExample">
    delete from complaint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smile.pojo.ComplaintDO">
    insert into complaint (Id, UserId, Type, 
      Score,
      CreateTime, UpdateTime, Content
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER},
      UNIX_TIMESTAMP(NOW()), UNIX_TIMESTAMP(NOW()), #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.smile.pojo.ComplaintDO">
    insert into complaint
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="type != null">
        Type,
      </if>
      <if test="score != null">
        Score,
      </if>
      <if test="isenabled != null">
        IsEnabled,
      </if>
      <if test="isdeleted != null">
        IsDeleted,
      </if>
      <if test="createtime != null">
        CreateTime,
      </if>
      <if test="updatetime != null">
        UpdateTime,
      </if>
      <if test="content != null">
        Content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="isenabled != null">
        #{isenabled,jdbcType=TINYINT},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smile.pojo.ComplaintDOExample" resultType="java.lang.Long">
    select count(*) from complaint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complaint
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        Type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        Score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.isenabled != null">
        IsEnabled = #{record.isenabled,jdbcType=TINYINT},
      </if>
      <if test="record.isdeleted != null">
        IsDeleted = #{record.isdeleted,jdbcType=TINYINT},
      </if>
      <if test="record.createtime != null">
        CreateTime = #{record.createtime,jdbcType=BIGINT},
      </if>
      <if test="record.updatetime != null">
        UpdateTime = #{record.updatetime,jdbcType=BIGINT},
      </if>
      <if test="record.content != null">
        Content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update complaint
    set Id = #{record.id,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      Type = #{record.type,jdbcType=INTEGER},
      Score = #{record.score,jdbcType=INTEGER},
      IsEnabled = #{record.isenabled,jdbcType=TINYINT},
      IsDeleted = #{record.isdeleted,jdbcType=TINYINT},
      CreateTime = #{record.createtime,jdbcType=BIGINT},
      UpdateTime = #{record.updatetime,jdbcType=BIGINT},
      Content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complaint
    set Id = #{record.id,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      Type = #{record.type,jdbcType=INTEGER},
      Score = #{record.score,jdbcType=INTEGER},
      IsEnabled = #{record.isenabled,jdbcType=TINYINT},
      IsDeleted = #{record.isdeleted,jdbcType=TINYINT},
      CreateTime = #{record.createtime,jdbcType=BIGINT},
      UpdateTime = #{record.updatetime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smile.pojo.ComplaintDO">
    update complaint
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        Type = #{type,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        Score = #{score,jdbcType=INTEGER},
      </if>
      <if test="isenabled != null">
        IsEnabled = #{isenabled,jdbcType=TINYINT},
      </if>
      <if test="isdeleted != null">
        IsDeleted = #{isdeleted,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        CreateTime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        UpdateTime = #{updatetime,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        Content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.smile.pojo.ComplaintDO">
    update complaint
    set UserId = #{userid,jdbcType=INTEGER},
      Type = #{type,jdbcType=INTEGER},
      Score = #{score,jdbcType=INTEGER},
      IsEnabled = #{isenabled,jdbcType=TINYINT},
      IsDeleted = #{isdeleted,jdbcType=TINYINT},
      CreateTime = #{createtime,jdbcType=BIGINT},
      UpdateTime = #{updatetime,jdbcType=BIGINT},
      Content = #{content,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smile.pojo.ComplaintDO">
    update complaint
    set UserId = #{userid,jdbcType=INTEGER},
      Type = #{type,jdbcType=INTEGER},
      Score = #{score,jdbcType=INTEGER},
      IsEnabled = #{isenabled,jdbcType=TINYINT},
      IsDeleted = #{isdeleted,jdbcType=TINYINT},
      CreateTime = #{createtime,jdbcType=BIGINT},
      UpdateTime = #{updatetime,jdbcType=BIGINT}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smile.mapper.ShopGoodsCategoryDOMapper">
  <resultMap id="BaseResultMap" type="com.smile.pojo.ShopGoodsCategoryDO">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="ParentId" jdbcType="INTEGER" property="parentid" />
    <result column="Depth" jdbcType="INTEGER" property="depth" />
    <result column="Title" jdbcType="VARCHAR" property="title" />
    <result column="ImageUrl" jdbcType="VARCHAR" property="imageurl" />
    <result column="OrderBy" jdbcType="INTEGER" property="orderby" />
    <result column="IsEnabled" jdbcType="TINYINT" property="isenabled" />
    <result column="IsDeleted" jdbcType="TINYINT" property="isdeleted" />
    <result column="CreateTime" jdbcType="BIGINT" property="createtime" />
    <result column="UpdateTime" jdbcType="BIGINT" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, ParentId, Depth, Title, ImageUrl, OrderBy, IsEnabled, IsDeleted, CreateTime, 
    UpdateTime
  </sql>
  <select id="selectByExample" parameterType="com.smile.pojo.ShopGoodsCategoryDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shopgoodscategory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shopgoodscategory
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shopgoodscategory
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.smile.pojo.ShopGoodsCategoryDOExample">
    delete from shopgoodscategory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smile.pojo.ShopGoodsCategoryDO">
    insert into shopgoodscategory (Id, ParentId, Depth, 
      Title, ImageUrl, OrderBy, 
      IsEnabled, IsDeleted, CreateTime, 
      UpdateTime)
    values (#{id,jdbcType=INTEGER}, #{parentid,jdbcType=INTEGER}, #{depth,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{imageurl,jdbcType=VARCHAR}, #{orderby,jdbcType=INTEGER}, 
      #{isenabled,jdbcType=TINYINT}, #{isdeleted,jdbcType=TINYINT}, #{createtime,jdbcType=BIGINT}, 
      #{updatetime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.smile.pojo.ShopGoodsCategoryDO">
    insert into shopgoodscategory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="parentid != null">
        ParentId,
      </if>
      <if test="depth != null">
        Depth,
      </if>
      <if test="title != null">
        Title,
      </if>
      <if test="imageurl != null">
        ImageUrl,
      </if>
      <if test="orderby != null">
        OrderBy,
      </if>
      <if test="isenabled != null">
        IsEnabled,
      </if>
      <if test="isdeleted != null">
        IsDeleted,
      </if>
      <if test="createtime != null">
        CreateTime,
      </if>
      <if test="updatetime != null">
        UpdateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="depth != null">
        #{depth,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null">
        #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="orderby != null">
        #{orderby,jdbcType=INTEGER},
      </if>
      <if test="isenabled != null">
        #{isenabled,jdbcType=TINYINT},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smile.pojo.ShopGoodsCategoryDOExample" resultType="java.lang.Long">
    select count(*) from shopgoodscategory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shopgoodscategory
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parentid != null">
        ParentId = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.depth != null">
        Depth = #{record.depth,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        Title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.imageurl != null">
        ImageUrl = #{record.imageurl,jdbcType=VARCHAR},
      </if>
      <if test="record.orderby != null">
        OrderBy = #{record.orderby,jdbcType=INTEGER},
      </if>
      <if test="record.isenabled != null">
        IsEnabled = #{record.isenabled,jdbcType=TINYINT},
      </if>
      <if test="record.isdeleted != null">
        IsDeleted = #{record.isdeleted,jdbcType=TINYINT},
      </if>
      <if test="record.createtime != null">
        CreateTime = #{record.createtime,jdbcType=BIGINT},
      </if>
      <if test="record.updatetime != null">
        UpdateTime = #{record.updatetime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shopgoodscategory
    set Id = #{record.id,jdbcType=INTEGER},
      ParentId = #{record.parentid,jdbcType=INTEGER},
      Depth = #{record.depth,jdbcType=INTEGER},
      Title = #{record.title,jdbcType=VARCHAR},
      ImageUrl = #{record.imageurl,jdbcType=VARCHAR},
      OrderBy = #{record.orderby,jdbcType=INTEGER},
      IsEnabled = #{record.isenabled,jdbcType=TINYINT},
      IsDeleted = #{record.isdeleted,jdbcType=TINYINT},
      CreateTime = #{record.createtime,jdbcType=BIGINT},
      UpdateTime = #{record.updatetime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smile.pojo.ShopGoodsCategoryDO">
    update shopgoodscategory
    <set>
      <if test="parentid != null">
        ParentId = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="depth != null">
        Depth = #{depth,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        Title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null">
        ImageUrl = #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="orderby != null">
        OrderBy = #{orderby,jdbcType=INTEGER},
      </if>
      <if test="isenabled != null">
        IsEnabled = #{isenabled,jdbcType=TINYINT},
      </if>
      <if test="isdeleted != null">
        IsDeleted = #{isdeleted,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        CreateTime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        UpdateTime = #{updatetime,jdbcType=BIGINT},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smile.pojo.ShopGoodsCategoryDO">
    update shopgoodscategory
    set ParentId = #{parentid,jdbcType=INTEGER},
      Depth = #{depth,jdbcType=INTEGER},
      Title = #{title,jdbcType=VARCHAR},
      ImageUrl = #{imageurl,jdbcType=VARCHAR},
      OrderBy = #{orderby,jdbcType=INTEGER},
      IsEnabled = #{isenabled,jdbcType=TINYINT},
      IsDeleted = #{isdeleted,jdbcType=TINYINT},
      CreateTime = #{createtime,jdbcType=BIGINT},
      UpdateTime = #{updatetime,jdbcType=BIGINT}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>